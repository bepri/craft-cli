[project]
name = "craft-cli"
dynamic = ["version"]
description = "Command Line Interface"
authors = [{ name = "Canonical Ltd", email = "snapcraft@lists.snapcraft.io" }]
dependencies = [
    "platformdirs",
    "pywin32; sys_platform == 'win32'",
    "jinja2>=3.1.5",
    "overrides>=7.7.0",
    "typing-extensions",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: Pytest",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.10"

[project.license]
file = "LICENSE"

[project.readme]
file = "README.rst"
content-type = "text/x-rst"

[project.urls]
Website = "https://github.com/canonical/craft-cli"
Documentation = "https://craft-cli.readthedocs.io/en/latest/"
Source = "https://github.com/canonical/craft-cli.git"
Issues = "https://github.com/canonical/craft-cli/issues"

[project.entry-points.pytest11]
emitter = "craft_cli.pytest_plugin"

[project.optional-dependencies]
dev = [
    "coverage[toml]==7.6.1",
    "pytest==8.3.3",
    "pytest-cov==5.0.0",
    "pytest-mock==3.14.0",
    "pytest-subprocess",
]
lint = ["codespell[toml]==2.3.0", "yamllint==1.35.1"]
types = [
    "mypy[reports]==1.12.0",
    "pyright==1.1.388",
    "types-Pygments",
    "types-colorama",
    "types-setuptools",
]
docs = [
    "sphinx-toolbox==3.8.1",
    "sphinx-lint==1.0.0",
    "pytest>=7.0.0",                 # pytest is imported by the code, which is parsed for api gen.
    "canonical-sphinx[full]==0.2.0",
]

[build-system]
requires = ["setuptools==75.2.0", "setuptools_scm[toml]>=7.1"]
build-backend = "setuptools.build_meta"

[tool.setuptools.dynamic]
readme = { file = "README.rst" }

[tool.setuptools_scm]
write_to = "craft_cli/_version.py"

[tool.setuptools.packages.find]
exclude = ["dist*", "docs*", "results*", "tests*"]

[tool.codespell]
ignore-words-list = "buildd,crate,keyserver,comandos,ro,dedent,dedented"
skip = ".tox,.git,build,.*_cache,__pycache__,*.tar,*.snap,*.png,./node_modules,./docs/_build,.direnv,.venv,venv,.vscode"
quiet-level = 3
check-filenames = true

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = "tests"
xfail_strict = true

[tool.coverage.run]
branch = true
# Disable parallel coverage to preserve the data-file name so that 'coverage xml' finds it
parallel = false
omit = ["tests/**"]

[tool.coverage.report]
exclude_also = ["if TYPE_CHECKING:"]

[tool.pyright]
#strict = ["craft_cli"] # NOTE: disabled pending fix of the many errors (see gh issue #147)
pythonVersion = "3.10"
pythonPlatform = "Linux"
ignore = ["build/**", "docs/**", "craft_cli/_version.py"]

[tool.mypy]
python_version = "3.10"
exclude = ["build", "tests", "results", "docs"]
warn_unused_configs = true
warn_redundant_casts = true
strict_equality = true
strict_concatenate = true
warn_return_any = true
disallow_subclassing_any = true
disallow_untyped_decorators = true
disallow_any_generics = true

[[tool.mypy.overrides]]
module = ["craft_cli"]
disallow_untyped_defs = true
no_implicit_optional = true

[[tool.mypy.overrides]]
module = ["tests.*"]
strict = false
